simulation_id = "Mutable Noisy Complete StandardGenerationalSimulation for MultiprocessStandardSimulation"
algorithms_directory = "examples/algorithms/"
nodes = [ { node_id = "always_cooperate_", algorithm = { file = "simple.py", object = "AlwaysCooperate"}, quantity = 10 },
          { node_id = "always_defect_", algorithm = { file = "simple.py", object = "AlwaysDefect" }, quantity = 10 },
          { node_id = "grim_trigger_", algorithm = { file = "grudge.py", object = "GrimTrigger" }, quantity = 10 },
          { node_id = "random_cooperation_", algorithm = { file = "simple.py", object = "RandomCooperation" }, quantity = 10 },
          { node_id = "tit_for_tat_", algorithm = { file = "tit_for_tat.py", object = "TitForTat" }, quantity = 10 },
          { node_id = "tit_for_two_tats_", algorithm = { file = "tit_for_tat.py", object = "TitForTwoTats" }, quantity = 10 },
          { node_id = "two_tits_for_tat_", algorithm = { file = "tit_for_tat.py", object = "TwoTitsForTat" }, quantity = 10 },
          { node_id = "firm_but_fair_", algorithm = { file = "firm_but_fair.py", object = "FirmButFair" }, quantity = 10 } ]
simulation = { object = "StandardGenerationalSimulation" }
generational_simulation = { object = 'MultiprocessStandardSimulation' }
simulation_arguments = { generations = 10, rounds = 200, noise = true, noise_per_mille = 250, simulation_mutations = true, mutations_per_mille = 100, pool_size = 4 }
simulation_data_output = "examples/rounds/mutable_noisy_complete_generational_mss.json"
simulation_results_output = "examples/results/mutable_noisy_complete_generational_mss.json"